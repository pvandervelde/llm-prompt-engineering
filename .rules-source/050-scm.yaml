- name: scm-git-pull-request-title
  editors:
    - name: copilot
      modes: [agent, edit]
    - name: cline
      modes: [plan, act]
    - name: roo
      modes:
        [architect, code, test, debug, flow-architect, flow-code, flow-debug]
  text: |
    The pull request title should follow the conventional commit format.
    `<type>(<scope>): <subject>` where `type` is one of the following: `feat`, `fix`, `chore`, `docs`,
    `style`, `refactor`, `perf`, `test`.

- name: scm-git-pull-request-template
  editors:
    - name: copilot
      modes: [agent, edit]
    - name: cline
      modes: [plan, act]
    - name: roo
      modes:
        [architect, code, test, debug, flow-architect, flow-code, flow-debug]
  text: |
    Use the pull request template if there is one. The pull request
    template can be found in the `./.github/PULL_REQUEST_TEMPLATE.md` file.

- name: scm-git-pull-request-review
  editors:
    - name: copilot
      modes: [ask, agent]
    - name: cline
      modes: [plan, act]
    - name: roo
      modes:
        [
          architect,
          ask,
          code,
          debug,
          test,
          flow-architect,
          flow-code,
          flow-debug,
        ]
  text: |
    All pull requests should be reviewed by at least one other developer and
    GitHub copilot before being merged into the main branch.

- name: scm-branch-naming
  editors:
    - name: copilot
      modes: [agent]
    - name: cline
      modes: [plan, act]
    - name: roo
      modes:
        [architect, code, test, debug, flow-architect, flow-code, flow-debug]
  text: |
    The branch name should be a brief summary of the changes being made. Branch
    names should be in lowercase and use hyphens to separate words. For example, `fix-bug-in-login-page`
    or `feature-add-new-user`.

- name: scm-commit-message
  editors:
    - name: copilot
      modes: [edit, agent]
    - name: cline
      modes: [act]
    - name: roo
      modes:
        [architect, code, test, debug, flow-architect, flow-code, flow-debug]
  text: |
    For commit messages the
    type should be one of the following: `feat`, `fix`, `chore`, `docs`,
    `style`, `refactor`, `perf`, `test`. The scope should be the name of the module or component being changed. The subject should
    be a short description of the change. The `work_item_ref` is one of the following issue references:
    `references` or `related to` followed by the issue number.
    Finally those parts make the following format for commit messages:

    ```text
    type(scope): subject

    description

     references <work_item_ref>
    ```
